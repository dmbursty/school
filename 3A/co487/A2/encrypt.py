plaintext = [0x0,0x0,0x1,0x1,0x2,0x2,0x3,0x3,0x4,0x4,0x5,0x5]

def s0(z):
  return {0x0:0x1, 0x1:0x9, 0x2:0x2, 0x3:0x9,
          0x4:0xa, 0x5:0x7, 0x6:0xf, 0x7:0xe,
          0x8:0x6, 0x9:0xb, 0xa:0xc, 0xb:0x8,
          0xc:0x4, 0xd:0x3, 0xe:0x2, 0xf:0x0}[z]

def s1(z):
  return {0x0:0x6, 0x1:0xb, 0x2:0xb, 0x3:0xa,
          0x4:0xa, 0x5:0xc, 0x6:0xc, 0x7:0xd,
          0x8:0xd, 0x9:0x1, 0xa:0x1, 0xb:0x2,
          0xc:0x2, 0xd:0x4, 0xe:0x5, 0xf:0x7}[z]

def sk(z):
  return {0x0:0x2, 0x1:0x2, 0x2:0x3, 0x3:0x3,
          0x4:0x4, 0x5:0x4, 0x6:0x5, 0x7:0x5}[z]

def swap(byte):
  swp = byte[0]
  byte[0] = byte[1]
  byte[1] = swp

def f(inp):
  fb = lambda x:(x >> 3) & 0x1
  z = [[(inp >> 20) & 0xf, (inp >> 16) & 0xf],
       [(inp >> 12) & 0xf, (inp >> 8) & 0xf],
       [(inp >> 4) & 0xf, (inp) & 0xf]]
  zstar = 0
  for i in range(len(z)):
    zstar = zstar | (fb(z[i][0]) << (2 - i) )
    z[i][0] = s0(z[i][0])
    z[i][1] = s1(z[i][1])
  t = sk(zstar)
  for i in range(len(z)):
    if (t >> (2-i)) & 1:
      z[i].reverse()
  z[0][0], z[1][0] = z[1][0], z[0][0]
  z[0][1], z[2][1] = z[2][1], z[0][1]
  z[1][1], z[2][0] = z[2][0], z[1][1]
  ret = 0
  for byte in z:
    ret = ret << 8
    ret = ret | (byte[0] << 4) | byte[1]
  return ret

m = []

m.append(0x001122)
print "0x00%x" % m[-1]
m.append(0x334455)
print "0x%x" % m[-1]

for i in range(3):
  m.append(m[-2] ^ f(m[-1]))
  print "0x%x" % m[-1]

print "--"

for i in range(8):
  def sk(z):
    return i
  print "%d - %x" % (i, f(0x9002ef) ^ 0x4b330a)
