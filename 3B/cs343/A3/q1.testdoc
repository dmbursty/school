To test the token ring program I used a number of test cases.  The output of my
program was compared to the output of the test executable for each test case.
Below is a description of the test cases, and below that the shell script I
used to run all these tests, and at the bottom are the results from 'script'.


The tests are (in the order below):
Testing no arguments and too many arguments
Testing invalid filename
Testing invalid number of stations (0, negative, too many, non-numeric)
Testing requests with invalid parameters (see below)
Testing empty input file
Testing the standard functionality of the protocol.  This includes the basic
data/ack/token passing as well as the priority switching for data recievers, the
sender itself, and other stations in between. (see below)
Testing an input that is not already sorted by round
Testing a huge input file (200 requests for 100 stations)  The input file is
randomly generated by a simple python script for each run, and has a tiny chance
of failing due to the ambiguity of allowed in the specification.


The invalid parameters test file (t_invalid):
0 0 0 0    // Sending to self
-1 0 1 0   // Negative round
0 -1 0 0   // Negative src
0 0 -1 0   // Negative dst
0 0 1 -1   // Negative priority
0 0 100 0  // dst above num stations
0 100 0 0  // src above num stations

The standard functionality test file (t_test):
1 0 4 1
1 1 5 2  // To test saving priority
1 2 6 3  // To test nested saving priorities
1 3 7 0  // To test that the priority should NOT be saved
6 0 4 4
6 4 5 5  // To test the responder saving priority
7 0 4 7  // To test forcing passing token with a high priority request queued


The test shell script:

echo "Testing no arguments"
./tokenring 2> myout
./q1 2> out
diff myout out

echo "Testing too many arguments"
./tokenring 1 2 3 4 5 6 7 2> myout
./q1 1 2 3 4 5 6 7 2> out
diff myout out

echo "Testing bad input file"
./tokenring 1 xxxxxxx 2> myout
./q1 1 xxxxxxx 2> out
diff myout out

echo "Testing bad number of stations"
echo "Please specify 1-100 stations" > out
./tokenring 0 t_empty 2> myout
diff myout out
./tokenring -1 t_empty 2> myout
diff myout out
./tokenring 1000 t_empty 2> myout
diff myout out
./tokenring abcd t_empty 2> myout
diff myout out

echo "Testing invalid requests"
./tokenring 5 t_invalid > myout 2> /dev/null
./q1 5 t_invalid > out 2> /dev/null
diff myout out

echo "Testing no requests"
./tokenring 5 t_empty > myout 2> /dev/null
./q1 5 t_empty > out 2> /dev/null
diff myout out

echo "Testing standard funtionality"
./tokenring 8 t_test > myout 2> /dev/null
./q1 8 t_test > out 2> /dev/null
diff myout out

echo "Testing random request order in input"
./tokenring 8 t_bad_order > myout 2> /dev/null
./q1 8 t_bad_order > out 2> /dev/null
diff myout out

echo "Testing huge specification"
python tester.py 200 100 > t_huge
./tokenring 100 t_huge > myout 2> /dev/null
./q1 100 t_huge > out 2> /dev/null
diff myout out

echo "Finished all tests"


Output from script:
There would be output from diffs between the 'Testing' lines in the case of any
errors.

Script started on Sat Oct 24 22:55:12 2009
sh-2.03$ ./test.sh
Testing no arguments
Testing too many arguments
Testing bad input file
Testing bad number of stations
Testing invalid requests
Testing no requests
Testing standard funtionality
Testing random request order in input
Testing huge specification
Finished all tests
sh-2.03$ exit

script done on Sat Oct 24 22:56:48 2009
